// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}


model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  firstname String?
  lastname  String?
  password  String
  isActived Boolean  @default(false)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation : membre d'un seul club
  clubId String? @db.ObjectId
  club   Club?   @relation("ClubMembers", fields: [clubId], references: [id])
}

model Club {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String  @unique
  country  String @default("FR")
  budget   Float   @default(0)
  logo     String?

  // Membres
  members         User[]     @relation("ClubMembers")
  players         Player[]   @relation("ClubPlayers")
  soldTransfers   Transfer[] @relation("SellerClub")
  boughtTransfers Transfer[] @relation("BuyerClub")
}

model Player {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  lastname  String
  firstname String
  email     String
  number    Int
  price     Int
  available Boolean          @default(true)
  country   String
  avatar    String?
  images    String[]         @default([])
  videos    String[]         @default([])
  birthday  DateTime
  position  String @default("Milieu d√©fensif")

  clubId    String?    @db.ObjectId
  club      Club?      @relation("ClubPlayers", fields: [clubId], references: [id])
  transfers Transfer[]
}

model Transfer {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  playerId String @db.ObjectId

  player Player @relation(fields: [playerId], references: [id])

  transferDate DateTime @default(now())

  seller   Club   @relation("SellerClub", fields: [sellerId], references: [id])
  sellerId String @db.ObjectId

  buyer   Club   @relation("BuyerClub", fields: [buyerId], references: [id])
  buyerId String @db.ObjectId
}
