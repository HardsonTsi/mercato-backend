// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum FootballPosition {
  GOALKEEPER             // Gardien de but
  RIGHT_BACK             // Arrière droit
  LEFT_BACK              // Arrière gauche
  CENTER_BACK            // Défenseur central
  SWEEPER                // Libéro

  DEFENSIVE_MIDFIELDER   // Milieu défensif
  CENTRAL_MIDFIELDER     // Milieu central
  BOX_TO_BOX_MIDFIELDER  // Milieu box-to-box

  ATTACKING_MIDFIELDER   // Milieu offensif
  RIGHT_MIDFIELDER       // Milieu droit
  LEFT_MIDFIELDER        // Milieu gauche
  WIDE_PLAYMAKER         // Meneur excentré
  DEEP_LYING_PLAYMAKER   // Meneur de jeu en retrait

  LEFT_WINGER            // Ailier gauche
  RIGHT_WINGER           // Ailier droit
  INVERTED_WINGER        // Ailier inversé

  STRIKER                // Attaquant de pointe
  CENTER_FORWARD         // Avant-centre
  SECOND_STRIKER         // Deuxième attaquant
  FALSE_NINE             // Faux neuf
  POACHER                // Renard des surfaces
  TARGET_MAN             // Pivot
  SHADOW_STRIKER         // Attaquant de l'ombre
}


model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  firstname String?
  lastname  String?
  password  String
  isActived Boolean  @default(false)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation : membre d'un seul club
  clubId String? @db.ObjectId
  club   Club?   @relation("ClubMembers", fields: [clubId], references: [id])
}

model Club {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String  @unique
  country  String
  budget   Float   @default(0)
  expenses Float   @default(0)
  logo     String?

  // Membres
  members User[]   @relation("ClubMembers")
  players Player[] @relation("ClubPlayers")
}

model Player {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  lastname  String
  firstname String
  email     String
  number    Int
  price     Int
  available Boolean @default(true)
  country   String
  avatar    String?
  images    String[] @default([])
  videos    String[] @default([])
  birthday DateTime
  position FootballPosition @default(GOALKEEPER)

  clubId String? @db.ObjectId
  club   Club?   @relation("ClubPlayers", fields: [clubId], references: [id])
}
